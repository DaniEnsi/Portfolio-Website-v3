import Vue from 'vue'
import Router from 'vue-router'
import { normalizeURL, decode } from 'ufo'
import { interopDefault } from './utils'
import scrollBehavior from './router.scrollBehavior.js'

const _719c9e04 = () => interopDefault(import('../../../src/pages/blog/index.vue' /* webpackChunkName: "pages/blog/index" */))
const _053f52ce = () => interopDefault(import('../../../src/pages/donate.vue' /* webpackChunkName: "pages/donate" */))
const _78139d2a = () => interopDefault(import('../../../src/pages/hireme.vue' /* webpackChunkName: "pages/hireme" */))
const _1936558e = () => interopDefault(import('../../../src/pages/portfolio.vue' /* webpackChunkName: "pages/portfolio" */))
const _2537b688 = () => interopDefault(import('../../../src/pages/me/contact.vue' /* webpackChunkName: "pages/me/contact" */))
const _7fd1e129 = () => interopDefault(import('../../../src/pages/me/repos.vue' /* webpackChunkName: "pages/me/repos" */))
const _a9225534 = () => interopDefault(import('../../../src/pages/me/songs.vue' /* webpackChunkName: "pages/me/songs" */))
const _7228788c = () => interopDefault(import('../../../src/pages/projects/is-inside-me.vue' /* webpackChunkName: "pages/projects/is-inside-me" */))
const _0a74726e = () => interopDefault(import('../../../src/pages/projects/premid/index.vue' /* webpackChunkName: "pages/projects/premid/index" */))
const _5830f0a9 = () => interopDefault(import('../../../src/pages/projects/unblock-please.vue' /* webpackChunkName: "pages/projects/unblock-please" */))
const _4332456a = () => interopDefault(import('../../../src/pages/projects/premid/custom-status.vue' /* webpackChunkName: "pages/projects/premid/custom-status" */))
const _7a7748d1 = () => interopDefault(import('../../../src/pages/projects/premid/mdcreator.vue' /* webpackChunkName: "pages/projects/premid/mdcreator" */))
const _6fe5fcbc = () => interopDefault(import('../../../src/pages/blog/_slug.vue' /* webpackChunkName: "pages/blog/_slug" */))
const _319a8f7a = () => interopDefault(import('../../../src/pages/index.vue' /* webpackChunkName: "pages/index" */))

const emptyFn = () => {}

Vue.use(Router)

export const routerOptions = {
  mode: 'history',
  base: '/',
  linkActiveClass: 'nuxt-link-active',
  linkExactActiveClass: 'nuxt-link-exact-active',
  scrollBehavior,

  routes: [{
    path: "/blog",
    component: _719c9e04,
    name: "blog"
  }, {
    path: "/donate",
    component: _053f52ce,
    name: "donate"
  }, {
    path: "/hireme",
    component: _78139d2a,
    name: "hireme"
  }, {
    path: "/portfolio",
    component: _1936558e,
    name: "portfolio"
  }, {
    path: "/me/contact",
    component: _2537b688,
    name: "me-contact"
  }, {
    path: "/me/repos",
    component: _7fd1e129,
    name: "me-repos"
  }, {
    path: "/me/songs",
    component: _a9225534,
    name: "me-songs"
  }, {
    path: "/projects/is-inside-me",
    component: _7228788c,
    name: "projects-is-inside-me"
  }, {
    path: "/projects/premid",
    component: _0a74726e,
    name: "projects-premid"
  }, {
    path: "/projects/unblock-please",
    component: _5830f0a9,
    name: "projects-unblock-please"
  }, {
    path: "/projects/premid/custom-status",
    component: _4332456a,
    name: "projects-premid-custom-status"
  }, {
    path: "/projects/premid/mdcreator",
    component: _7a7748d1,
    name: "projects-premid-mdcreator"
  }, {
    path: "/blog/:slug",
    component: _6fe5fcbc,
    name: "blog-slug"
  }, {
    path: "/",
    component: _319a8f7a,
    name: "index"
  }],

  fallback: false
}

export function createRouter (ssrContext, config) {
  const base = (config._app && config._app.basePath) || routerOptions.base
  const router = new Router({ ...routerOptions, base  })

  // TODO: remove in Nuxt 3
  const originalPush = router.push
  router.push = function push (location, onComplete = emptyFn, onAbort) {
    return originalPush.call(this, location, onComplete, onAbort)
  }

  const resolve = router.resolve.bind(router)
  router.resolve = (to, current, append) => {
    if (typeof to === 'string') {
      to = normalizeURL(to)
    }
    return resolve(to, current, append)
  }

  return router
}
