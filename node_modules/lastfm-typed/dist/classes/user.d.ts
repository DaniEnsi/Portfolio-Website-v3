import * as UserInterface from "../interfaces/userInterface";
import Base from "../base";
import { UserPaginatedInput, UserResolvable } from "../interfaces/shared";
export default class UserClass extends Base {
    getFriends(username: string, params?: {
        sk?: string;
        recenttracks?: boolean;
        limit?: number;
        page?: number;
    }): Promise<UserInterface.getFriends>;
    getFriends(input: UserInterface.getFriendsInput): Promise<UserInterface.getFriends>;
    getInfo(username: string, params?: {
        sk?: string;
    }): Promise<UserInterface.getInfo>;
    getInfo(input: UserResolvable): Promise<UserInterface.getInfo>;
    getLovedTracks(username: string, params?: {
        sk?: string;
        limit?: number;
        page?: number;
    }): Promise<UserInterface.getLovedTracks>;
    getLovedTracks(input: UserPaginatedInput): Promise<UserInterface.getLovedTracks>;
    getPersonalTags(username: string, tag: string, taggingType: "artist" | "album" | "track", params?: {
        sk?: string;
        limit?: number;
        page?: number;
    }): Promise<UserInterface.getPersonalTags>;
    getPersonalTags(input: UserInterface.getPersonalTagsInput): Promise<UserInterface.getPersonalTags>;
    getRecentTracks(username: string, params?: {
        sk?: string;
        limit?: number;
        page?: number;
        from?: string;
        to?: string;
        extended?: boolean;
    }): Promise<UserInterface.getRecentTracks>;
    getRecentTracks(input: UserInterface.getRecentTracksInput): Promise<UserInterface.getRecentTracks>;
    getTopAlbums(username: string, params?: {
        sk?: string;
        limit?: number;
        page?: number;
        period?: "overall" | "7day" | "1month" | "3month" | "6month" | "12month";
    }): Promise<UserInterface.getTopAlbums>;
    getTopAlbums(input: UserInterface.getTopEntriesInput): Promise<UserInterface.getTopAlbums>;
    getTopArtists(username: string, params?: {
        sk?: string;
        limit?: number;
        page?: number;
        period?: "overall" | "7day" | "1month" | "3month" | "6month" | "12month";
    }): Promise<UserInterface.getTopArtists>;
    getTopArtists(input: UserInterface.getTopEntriesInput): Promise<UserInterface.getTopArtists>;
    getTopTags(username: string, params?: {
        sk?: string;
        limit?: number;
    }): Promise<UserInterface.getTopTags>;
    getTopTags(input: UserInterface.getTopTagsInput): Promise<UserInterface.getTopTags>;
    getTopTracks(username: string, params?: {
        sk?: string;
        limit?: number;
        page?: number;
        period?: "overall" | "7day" | "1month" | "3month" | "6month" | "12month";
    }): Promise<UserInterface.getTopTracks>;
    getTopTracks(input: UserInterface.getTopEntriesInput): Promise<UserInterface.getTopTracks>;
    getWeeklyAlbumChart(username: string, params?: {
        sk?: string;
        limit?: number;
        from: string;
        to: string;
    } | {
        limit?: number;
    }): Promise<UserInterface.getWeeklyAlbumChart>;
    getWeeklyAlbumChart(input: UserInterface.getWeeklyChartInput): Promise<UserInterface.getWeeklyAlbumChart>;
    getWeeklyArtistChart(username: string, params?: {
        sk?: string;
        limit?: number;
        from: string;
        to: string;
    } | {
        limit?: number;
    }): Promise<UserInterface.getWeeklyArtistChart>;
    getWeeklyArtistChart(input: UserInterface.getWeeklyChartInput): Promise<UserInterface.getWeeklyArtistChart>;
    getWeeklyChartList(): Promise<UserInterface.getWeeklyChartList>;
    getWeeklyChartList(input?: {}): Promise<UserInterface.getWeeklyChartList>;
    getWeeklyTrackChart(username: string, params?: {
        sk?: string;
        limit?: number;
        from: string;
        to: string;
    } | {
        limit?: number;
    }): Promise<UserInterface.getWeeklyTrackChart>;
    getWeeklyTrackChart(input: UserInterface.getWeeklyChartInput): Promise<UserInterface.getWeeklyTrackChart>;
    private checkLimitAndConvertString;
}
