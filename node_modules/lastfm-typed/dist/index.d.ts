import TagClass from "./classes/tag";
import ChartClass from "./classes/chart";
import AuthClass from "./classes/auth";
import AlbumClass from "./classes/album";
import ArtistClass from "./classes/artist";
import LibraryClass from "./classes/library";
import TrackClass from "./classes/track";
import UserClass from "./classes/user";
import HelperClass from "./classes/helper";
import LoggerClass from "./logger";
import TypedEmitter from "typed-emitter";
import { LFMArgumentObject } from "./request";
import GeoClass from "./classes/geo";
interface Logger {
    requestStart: (args: LFMArgumentObject, HTTPMethod: "GET" | "POST") => void;
    requestComplete: (args: LFMArgumentObject, time: number, response: any) => void;
}
declare const LastFM_base: new <Logger_1>() => TypedEmitter<Logger_1>;
export default class LastFM extends LastFM_base<Logger> {
    tag: TagClass;
    chart: ChartClass;
    geo: GeoClass;
    auth: AuthClass;
    album: AlbumClass;
    artist: ArtistClass;
    library: LibraryClass;
    track: TrackClass;
    user: UserClass;
    helper: HelperClass;
    logger: LoggerClass;
    info: {
        key: string;
        secret: string;
        context: LastFM;
    };
    constructor(apiKey: string, options?: {
        apiSecret?: string;
        userAgent?: string;
        secureConnection?: boolean;
    });
}
export {};
